buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.3'
    }
}

plugins {
    id 'com.github.kt3k.coveralls' version '2.6.3'
}

group 'com.hartwig.healthchecks'
String tag = file('tag').getText('UTF-8').split('\\n')[0]

apply plugin: 'application'
apply plugin: 'com.github.johnrengelman.shadow'

allprojects {

    version tag + '-SNAPSHOT'

    apply plugin: 'java'
    apply plugin: 'eclipse'
    apply plugin: 'idea'
    apply plugin: "jacoco"
    apply plugin: 'checkstyle'

    checkstyle.toolVersion = '6.18'
    checkstyle {
        ignoreFailures = false
        showViolations = true
        configFile = rootProject.file('config/checkstyle/checkstyle.xml')
        configProperties = ["suppressionFile": project(':').file('config/checkstyle/suppressions.xml')]
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        testCompile group: 'org.jmockit', name: 'jmockit', version: '1.8'
        testCompile group: 'junit', name: 'junit', version: '4.12'
        compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.6'
        compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.6'
        compile group: 'com.intellij', name: 'annotations', version: '12.0'
        compile group: 'com.google.guava', name: 'guava', version: '19.0'
        compile group: 'com.github.samtools', name: 'htsjdk', version: '2.4.1'
        compile group: 'commons-cli', name: 'commons-cli', version: '1.3.1'
        compile group: 'io.reactivex', name: 'rxjava', version: '1.1.5'
        compile group: 'org.reflections', name: 'reflections', version: '0.9.10'
        compile group: 'com.google.code.gson', name: 'gson', version: '2.6.2'
    }
}

task jacocoRootReport(type: JacocoReport, group: 'Coverage reports') {
    description = 'Generates an aggregate report from all subprojects'
    dependsOn(subprojects.test)

    additionalSourceDirs = files(subprojects.sourceSets.main.allSource.srcDirs)
    sourceDirectories = files(subprojects.sourceSets.main.allSource.srcDirs)
    classDirectories = files(subprojects.sourceSets.main.output)
    executionData = files(subprojects.jacocoTestReport.executionData)

    reports {
        html.enabled = true
        xml.enabled = true
    }

    doFirst {
        executionData = files(executionData.findAll { it.exists() })
    }
}

coveralls {
    sourceDirs = subprojects.sourceSets.main.allSource.srcDirs.flatten()
    jacocoReportPath = "${buildDir}/reports/jacoco/jacocoRootReport/jacocoRootReport.xml"
}

dependencies {
    compile project(":common")
    compile project(":boggs")
    compile project(":smitty")
    compile project(":flint")
    compile project(":nesbit")
    compile project(":roz")
    compile project(":bile")
    compile project(":boo")
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.14'
}

run {
    if (project.hasProperty('args')) {
        args project.args.split('\\s')
    }
}

mainClassName = 'com.hartwig.healthchecks.HealthChecksApplication'
